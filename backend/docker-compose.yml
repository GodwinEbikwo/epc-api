version: "3.9"

services:
  # Main API Service - This will be built by Coolify
  app:
    build: .
    restart: always
    environment:
      NODE_ENV: production
      PORT: 3001
      # Database connection to existing Coolify database
      PGHOST: ${DATABASE_HOST:-coolify-db}
      PGPORT: ${DATABASE_PORT:-5432}
      PGDATABASE: ${DATABASE_NAME:-epcdb}
      PGUSER: ${DATABASE_USER:-epc_user}
      PGPASSWORD: ${DATABASE_PASSWORD}
      # Ollama connection
      OLLAMA_HOST: ollama:11434
    depends_on:
      - ollama
    ports:
      - "3001:3001"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.epc-api-http.rule=Host(`api.heatsignal.co.uk`)"
      - "traefik.http.routers.epc-api-http.entrypoints=http"
      - "traefik.http.routers.epc-api-https.rule=Host(`api.heatsignal.co.uk`)"
      - "traefik.http.routers.epc-api-https.entrypoints=https"
      - "traefik.http.routers.epc-api-https.tls.certresolver=letsencrypt"
      - "traefik.http.services.epc-api.loadbalancer.server.port=3001"
    networks:
      - default
      - coolify
    # Initialize pgai on startup
    command: >
      sh -c "
        node init-pgai.js || echo 'pgai initialization skipped' &&
        npm start
      "

  # Ollama service for local embeddings (no API costs!)
  ollama:
    image: ollama/ollama:latest
    restart: always
    volumes:
      - ollama-data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:11434/api/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    # Auto-pull the embedding model on startup
    command: >
      bash -c "
        ollama serve &
        sleep 30 &&
        ollama pull nomic-embed-text &&
        wait
      "

volumes:
  ollama-data:

networks:
  coolify:
    external: true
  
